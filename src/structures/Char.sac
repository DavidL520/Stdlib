module Char;

use ArrayBasics: {shape, sel};
export all;

external bool isalpha  (char C);
    #pragma linkobj "src/Char/Char.o"
external bool isupper  (char C);
    #pragma linkobj "src/Char/Char.o"
external bool islower  (char C); 
    #pragma linkobj "src/Char/Char.o"
external bool isdigit  (char C); 
    #pragma linkobj "src/Char/Char.o"
external bool isxdigit (char C);
    #pragma linkobj "src/Char/Char.o"
external bool isspace  (char C); 
    #pragma linkobj "src/Char/Char.o"
external bool ispunct  (char C); 
    #pragma linkobj "src/Char/Char.o"
external bool isalnum  (char C); 
    #pragma linkobj "src/Char/Char.o"
external bool isprint  (char C); 
    #pragma linkobj "src/Char/Char.o"
external bool isgraph  (char C); 
    #pragma linkobj "src/Char/Char.o"
external bool iscntrl  (char C); 
    #pragma linkobj "src/Char/Char.o"

    /* The above functions test characters of being in a specific range,
       e.g. in the range of digits, letters, or lower case letters. */


external bool isascii (int N); 
    #pragma linkobj "src/Char/Char.o"
external char toascii (int N); 
    #pragma linkobj "src/Char/Char.o"

    /* These functions test an integer value for being in the range of the
       ASCII character set or convert an integer value into an ASCII
       character, respectively. */


external char tolower (char C);
    #pragma linkobj "src/Char/Char.o"
external char toupper (char C);
    #pragma linkobj "src/Char/Char.o"

    /* These functions convert upper case letters into lower case letters
       and vice versa. */

external char tochar( int N);
    #pragma linksign[ 0, 1]
    #pragma linkobj "src/Char/Char.o"
    #pragma linkname "tochar_int"
external char tochar( float N);
    #pragma linksign[ 0, 1]
    #pragma linkobj "src/Char/Char.o"
    #pragma linkname "tochar_float"
external char tochar( double N);
    #pragma linksign[ 0, 1]
    #pragma linkobj "src/Char/Char.o"
    #pragma linkname "tochar_double"

inline
char[*] tochar( int[+] a)
{
  res = with( . <= iv <= .)
        genarray( shape( a), tochar( a[iv]), ' ');
  return( res);
}

    /* These functions convert numerical values into a char (byte) value */


